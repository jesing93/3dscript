{
  "name": "graycolorize",
  "description": "replace grayscale with color from a colormap",
  "version": "0.1.2",
  "repository": {
    "type": "git",
    "url": "git@github.com:deathcap/graycolorize.git"
  },
  "keywords": [
    "color",
    "grayscale",
    "ndarray"
  ],
  "dependencies": {
    "cwise": "^1.0.9",
    "onecolor": "^2.4.0",
    "ndarray": "^1.0.10"
  },
  "peerDependencies": {},
  "license": "MIT",
  "scripts": {
    "start": "beefy demo.js",
    "test": "node test.js"
  },
  "devDependencies": {
    "browserify": "^13.0.1",
    "get-pixels": "^1.0.1",
    "ndarray": "^1.0.10",
    "save-pixels": "~0.3.0",
    "tape": "^2.10.2"
  },
  "readme": "# graycolorize\n\nReplace grayscale with color from a colormap\n\n[![Build Status](https://travis-ci.org/deathcap/graycolorize.png)](https://travis-ci.org/deathcap/graycolorize)\n\nUsage:\n\n    var graycolorize = require('graycolorize');\n\n    graycolorize(pixels, colormap);\n\nwhere `pixels` is an [ndarray](https://github.com/mikolalysenko/ndarray) of pixels\n(e.g., loaded by [get-pixels](https://github.com/mikolalysenko/get-pixels)). `colormap`\nis a 256x4 ndarray of RGBA colors for each 256 grayscale colors to replace. \n\nYou can create the `colormap` yourself or call `graycolorize.generateMap(hue, saturation)` to\ngenerate one for you, with the given hue and saturation (0-1) from minimum to maximum brightness:\n\n    var colormap = graycolorize.generateMap(0.25, 0.5);\n\nExample (see demo.js or run `npm start`):\n\n![screenshot](http://i.imgur.com/w1Zas8E.png \"Screenshot\")\n\n## License\n\nMIT\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/deathcap/graycolorize/issues"
  },
  "_id": "graycolorize@0.1.2",
  "_from": "graycolorize@^0.1.1"
}
