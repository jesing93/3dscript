{
  "name": "obsolete",
  "description": "obsolete properties throw exceptions",
  "version": "0.1.0",
  "main": "obsolete.js",
  "repository": {
    "type": "git",
    "url": "git@github.com:deathcap/obsolete.git"
  },
  "keywords": [
    "obsolete",
    "property"
  ],
  "scripts": {
    "test": "node test.js"
  },
  "dependencies": {},
  "license": "MIT",
  "devDependencies": {
    "tape": "^3.5.0"
  },
  "readme": "# obsolete\n\nMark removed properties as obsolete so they throw an exception when used\n\n[![Build Status](https://travis-ci.org/deathcap/obsolete.png)](https://travis-ci.org/deathcap/obsolete)\n\nUsage:\n\n    var obsolete = require('obsolete');\n\n    var foo = {};\n    obsolete(foo, 'bar');\n\n    // throws exceptions 'obsolete property \"bar\" removed'\n    foo.bar;\n    foo.bar = 1;\n    foo.bar();\n\nUses [Object.defineProperty()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty)\nwith a custom `get`ter and `set`ter to throw `Error` exceptions on usage.\n\nUseful to cause old dependant code that needs to be updated to\nfail fast and fail early as possible, instead of returning and propagating\ninvalid data (`undefined`) leading to hard-to-track-down errors further down the line.\n\n## License\n\nMIT\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/deathcap/obsolete/issues"
  },
  "_id": "obsolete@0.1.0",
  "_from": "obsolete@^0.1.0"
}
