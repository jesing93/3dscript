{
  "name": "basic-camera",
  "version": "1.1.0",
  "description": "A very basic camera for use in WebGL projects",
  "main": "index.js",
  "scripts": {
    "test": "say sorry && exit 1",
    "start": "beefy demo.js:bundle.js -- -t brfs",
    "prepublish": "browserify -t brfs demo.js > bundle.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/hughsk/basic-camera.git"
  },
  "author": {
    "name": "Hugh Kennedy",
    "email": "hughskennedy@gmail.com",
    "url": "http://hughskennedy.com/"
  },
  "license": "MIT",
  "readmeFilename": "README.md",
  "devDependencies": {
    "perlin": "~1.0.0",
    "mesh-normals": "0.0.0",
    "heightmap-mesher": "0.0.0",
    "gl-vao": "0.0.2",
    "zeros": "0.0.0",
    "gl-shader": "0.0.6",
    "gl-now": "0.0.4",
    "gl-buffer": "~0.1.1",
    "beefy": "~0.4.1",
    "ndarray-fill": "~0.1.0",
    "brfs": "0.0.7",
    "browserify": "^3.38.0"
  },
  "dependencies": {
    "gl-matrix": "^2.2.1"
  },
  "readme": "# basic-camera [![experimental](http://hughsk.github.io/stability-badges/dist/experimental.svg)](http://github.com/hughsk/stability-badges) #\n\nA very basic camera for use in WebGL projects. Borrows a lot from\n[mikolalysenko](https://github.com/mikolalysenko)'s\n[orbit-camera](https://github.com/mikolalysenko/orbit-camera) module.\n\n[![basic-camera](https://nodei.co/npm/basic-camera.png?mini=true)](https://nodei.co/npm/basic-camera)\n\n## Usage ##\n\n### `camera = require('basic-camera')([pos])` ###\n\nCreates a new camera: optionally, you can pass in `pos` to set the initial\nposition.\n\n### `camera.position` ###\n\nA [gl-matrix](https://github.com/toji/gl-matrix) `vec3` representing the\nposition of the camera. It's array-like, so you can just set the `[0]`, `[1]`\nand `[2]` indices to change the position.\n\n### `camera.rotateX(radians)` ###\n\nRotates the camera along the x-axis by `radians`.\n\n### `camera.rotateY(radians)` ###\n\nRotates the camera along the y-axis by `radians`.\n\n### `camera.rotateZ(radians)` ###\n\nRotates the camera along the z-axis by `radians`.\n\n### `camera.getCameraVector(v)` ###\n\nSets a `vec3` to a vector corresponding to the camera's direction.\n\n### `camera.view([output])` ###\n\nReturns a new [gl-matrix](https://github.com/toji/gl-matrix) `mat4`, which you\ncan then safely pass onto something like\n[gl-shader](http://github.com/mikolalysenko/gl-shader) to handle the camera.\n",
  "bugs": {
    "url": "https://github.com/hughsk/basic-camera/issues"
  },
  "_id": "basic-camera@1.1.0",
  "_from": "basic-camera@^1.1.0"
}
