{
  "name": "block-models",
  "description": "custom non-cube block models for voxel.js",
  "main": "block-models.js",
  "version": "0.1.2",
  "repository": {
    "type": "git",
    "url": "git@github.com:deathcap/block-models.git"
  },
  "keywords": [
    "voxel",
    "model",
    "block",
    "vertices",
    "uv",
    "mesh"
  ],
  "dependencies": {},
  "license": "MIT",
  "devDependencies": {
    "canvas-orbit-camera": "0.0.0",
    "get-pixels": "^1.1.0",
    "gl-buffer": "^2.0.6",
    "gl-context": "^0.1.0",
    "gl-matrix": "^2.2.1",
    "gl-shader": "^4.1.1",
    "gl-texture2d": "^1.0.1",
    "gl-vao": "^1.1.2",
    "glslify": "^5.0.0",
    "wzrd": "^1.3.1"
  },
  "scripts": {
    "start": "wzrd demo.js -- -t glslify"
  },
  "readme": "# block-models\n\nGenerate custom (non-cube) block models\n\n![screenshot](http://i.imgur.com/245cXLp.png \"Screenshot model\")\n\nFor an example, run `npm start` or try the **[live demo](http://deathcap.github.io/block-models)**.\n\nUsable with [voxel-mesher](https://github.com/deathcap/voxel-mesher) and [voxel-shader](https://github.com/deathcap/voxel-shader)\nto show the custom model in a [voxel.js](http://voxeljs.com/) world:\n\n![screenshot](http://i.imgur.com/VKJ3L2x.png \"Screenshot in-game\")\n\n## Usage\n\n    var parseBlockModel = require('block-models');\n\n    var model = parseBlockModel(modelDefn[, getTextureUV[, x, y, z]])\n\nReturns an object with `vertices` and `uv` properties set to arrays\nsuitable for passing to WebGL. Parameters:\n\n* `modelDefn`: model definition (see format below)\n\n* `getTextureUV`: optional callback to lookup UV coordinates for textures in an atlas (defaults to 0.0-1.0)\n\n* `x, y, z`: optional vertex offset\n\n## Model definition\n\nBlocks are composed of textured planes, faces from an array of one or more cubes. Slab example:\n\n    [\n        {from: [0,0,0],\n        to: [16,8,16],\n        faceData: {\n            down: {},\n            up: {},\n            north: {},\n            south: {},\n            west: {},\n            east: {}},\n        }\n    ]\n\n* `from`, `to`: coordinates defining the cube\n* `faceData`: object with properties for each face to show (`down`, `up`, `north`, `south`, `west`, `east`)\n * face names can be omitted to not display the corresponding plane\n* `texture`: texture name for `getTextureUV` UV coordinate mapping\n\nNote: this format is similar to [Minecraft 1.8's block model system](https://pay.reddit.com/r/Minecraft/comments/22vu5w/upcoming_changes_to_the_block_model_system/),\nbut not completely compatible or as powerful.\n\nYou can experiment changing the model definition and viewing the results in realtime using the\n[demo](http://deathcap.github.io/block-models).\n\n## License\n\nMIT\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/deathcap/block-models/issues"
  },
  "_id": "block-models@0.1.2",
  "_from": "block-models@^0.1.0"
}
